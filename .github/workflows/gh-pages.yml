name: GitHub Pages

on: workflow_dispatch

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [16.x, 18.x]

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Node 🧰
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'

    - name: Install 📦
      run: npm ci

    - name: Validate JSON Data 🔎
      run: |
        npm run test:data -ws --if-present
      env:
        NEXT_PUBLIC_JSON_DATA_FOLDER: ../../../data/json/


  build:
    needs: [test]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Cache 💾 # https://nextjs.org/docs/messages/no-cache#github-actions
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        # Generate a new cache whenever packages or source files change.
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx', '**.json') }}
        # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

    - name: Node 🧰
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'

    - name: Install 📦
      run: npm ci

    - name: Build 🔧
      run: |
        npm run export -ws --if-present
      env:
        SITE_URL: https://commercelayer.github.io/demo-store
        NEXT_PUBLIC_BASE_PATH: /demo-store
        NEXT_PUBLIC_CL_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_CL_CLIENT_ID }}
        NEXT_PUBLIC_CL_ENDPOINT: ${{ secrets.NEXT_PUBLIC_CL_ENDPOINT }}
        NEXT_PUBLIC_JSON_DATA_FOLDER: ../../../data/json/

    - name: Setup Pages 📄
      uses: actions/configure-pages@v2

    - name: Upload artifact 🚀
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./demo-store-core/packages/website/out/


  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v1
